public class MatrixMultiplier {
    public static List<List<Integer>> multiplyMatrices(List<List<Integer>> A, List<List<Integer>> B) {
        Integer rowsA = A.size();
        Integer colsA = A[0].size();
        Integer rowsB = B.size();
        Integer colsB = B[0].size();

        if (colsA != rowsB) {
            throw new IllegalArgumentException('Matrix multiplication not possible: Columns of A must equal rows of B.');
        }

        List<List<Integer>> result = new List<List<Integer>>();
        for (Integer i = 0; i < rowsA; i++) {
            List<Integer> row = new List<Integer>();
            for (Integer j = 0; j < colsB; j++) {
                Integer sum = 0;
                for (Integer k = 0; k < colsA; k++) {
                    sum += A[i][k] * B[k][j];
                }
                row.add(sum);
            }
            result.add(row);
        }

        return result;
    }
}

/*
// Matrix A (2x3)
List<List<Integer>> A = new List<List<Integer>>();
A.add(new List<Integer>{1, 2, 3});
A.add(new List<Integer>{4, 5, 6});

// Matrix B (3x2)
List<List<Integer>> B = new List<List<Integer>>();
B.add(new List<Integer>{7, 8});
B.add(new List<Integer>{9, 10});
B.add(new List<Integer>{11, 12});

// Call multiplication method
List<List<Integer>> result = MatrixOperations.multiplyMatrices(A, B);

// Print result
System.debug(result);  // Output: ((58, 64), (139, 154))
*/
